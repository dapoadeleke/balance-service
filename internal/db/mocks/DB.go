// Code generated by mockery v2.42.0. DO NOT EDIT.

package mocks

import (
	db "github.com/dapoadeleke/balance-service/internal/db"
	mock "github.com/stretchr/testify/mock"
)

// DB is an autogenerated mock type for the DB type
type DB struct {
	mock.Mock
}

// MustBegin provides a mock function with given fields:
func (_m *DB) MustBegin() db.Tx {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for MustBegin")
	}

	var r0 db.Tx
	if rf, ok := ret.Get(0).(func() db.Tx); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(db.Tx)
		}
	}

	return r0
}

// NewDB creates a new instance of DB. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDB(t interface {
	mock.TestingT
	Cleanup(func())
}) *DB {
	mock := &DB{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
